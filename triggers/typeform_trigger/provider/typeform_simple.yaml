subscription_schema:
- name: webhook_secret
  type: secret-input
  required: false
  label:
    en_US: Webhook Secret
    ja_JP: Webhook シークレット
    zh_Hans: Webhook 密钥
  help:
    en_US: "Use the same secret configured in Typeform to enable Typeform-Signature validation."
    ja_JP: "Typeform で設定したシークレットと同じ値を入力すると Typeform-Signature の検証が有効になります。"
    zh_Hans: "输入与 Typeform 中配置相同的密钥，可启用 Typeform-Signature 校验。"

subscription_constructor:
  parameters:
  - name: form_id
    type: dynamic-select
    required: true
    multiple: false
    label:
      en_US: Form
      ja_JP: フォーム
      zh_Hans: 表单
    placeholder:
      en_US: Select a form
      ja_JP: フォームを選択
      zh_Hans: 选择表单
    help:
      en_US: "Choose the Typeform that should deliver webhooks to Dify."
      ja_JP: "Dify に Webhook を送信する Typeform フォームを選択してください。"
      zh_Hans: "选择需要将 Webhook 发送到 Dify 的 Typeform 表单。"
  - name: webhook_secret
    type: string
    required: false
    label:
      en_US: Webhook Secret Override
      ja_JP: Webhook シークレット（任意）
      zh_Hans: Webhook 密钥（可选）
    help:
      en_US: "Optional: provide a secret to reuse instead of letting Dify generate one automatically."
      ja_JP: "任意: Dify による自動生成の代わりに使用したいシークレットを指定できます。"
      zh_Hans: "可选：如需复用固定密钥，可在此填写，否则 Dify 会自动生成。"
  credentials_schema:
  - name: access_token
    type: secret-input
    required: true
    label:
      en_US: Personal Access Token
      ja_JP: パーソナルアクセス トークン
      zh_Hans: 个人访问令牌
    help:
      en_US: "Generate a token with forms:read, webhooks:read, and webhooks:write scopes under Typeform Account → Personal tokens."
      ja_JP: "Typeform アカウント → Personal tokens で forms:read / webhooks:read / webhooks:write スコープ付きトークンを作成してください。"
      zh_Hans: "在 Typeform 账户 → Personal tokens 中创建包含 forms:read、webhooks:read、webhooks:write 权限的令牌。"
    url: https://admin.typeform.com/account#/section/tokens
    placeholder:
      en_US: tfp_xxxxxxxxxxxxxxxxxxxxx
      ja_JP: tfp_xxxxxxxxxxxxxxxxxxxxx
      zh_Hans: tfp_xxxxxxxxxxxxxxxxxxxxx

  oauth_schema:
    client_schema:
    - name: client_id
      type: text-input
      required: true
      label:
        en_US: Client ID
        ja_JP: クライアントID
        zh_Hans: 客户端 ID
      help:
        en_US: "Create an OAuth application in the Typeform Developer Portal to obtain the client ID."
        ja_JP: "Typeform Developer Portal で OAuth アプリケーションを作成し、クライアント ID を取得してください。"
        zh_Hans: "在 Typeform Developer Portal 创建 OAuth 应用以获取客户端 ID。"
      url: https://developer.typeform.com/my-apps
      placeholder:
        en_US: your_client_id
        ja_JP: your_client_id
        zh_Hans: your_client_id
    - name: client_secret
      type: secret-input
      required: true
      label:
        en_US: Client Secret
        ja_JP: クライアントシークレット
        zh_Hans: 客户端密钥
      help:
        en_US: "Copy the client secret generated for your Typeform OAuth application."
        ja_JP: "Typeform の OAuth アプリケーションで生成されたクライアントシークレットをコピーしてください。"
        zh_Hans: "复制为 Typeform OAuth 应用生成的客户端密钥。"
      url: https://developer.typeform.com/my-apps
      placeholder:
        en_US: your_client_secret
        ja_JP: your_client_secret
        zh_Hans: your_client_secret
    credentials_schema:
    - name: access_token
      type: secret-input
      required: true
      label:
        en_US: Access Token
        ja_JP: アクセストークン
        zh_Hans: 访问令牌
    - name: refresh_token
      type: secret-input
      required: false
      label:
        en_US: Refresh Token
        ja_JP: リフレッシュトークン
        zh_Hans: 刷新令牌
    - name: token_type
      type: text-input
      required: false
      label:
        en_US: Token Type
        ja_JP: トークンタイプ
        zh_Hans: 令牌类型

events:
- events/form/form_response_received.yaml

identity:
  author: langgenius
  description:
    en_US: Typeform webhook triggers for form response submissions.
    ja_JP: Typeform のフォーム送信を受け取る Webhook トリガーです。
    zh_Hans: Typeform 表单提交的 Webhook 触发器。
  icon: image.png
  label:
    en_US: Typeform Triggers
    ja_JP: Typeform トリガー
    zh_Hans: Typeform 触发器
  name: typeform_trigger

extra:
  python:
    source: provider/typeform_simple.py
