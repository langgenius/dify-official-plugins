identity:
  name: issue_updated
  author: langgenius
  label:
    en_US: Issue Updated
    zh_Hans: Issue 更新
    ja_JP: 課題更新

description:
  en_US: Triggers when an issue is updated in Linear
  zh_Hans: 当在 Linear 中更新 issue 时触发
  ja_JP: Linearで課題が更新されたときにトリガーされます

parameters:
- name: priority_filter
  label:
    en_US: Priority Filter
    zh_Hans: 优先级过滤
    ja_JP: 優先度フィルター
  type: string
  required: false
  description:
    en_US: "Only trigger for specific priorities: 0=None, 1=Urgent, 2=High, 3=Normal, 4=Low (comma-separated)"
    zh_Hans: "仅触发指定优先级：0=无，1=紧急，2=高，3=正常，4=低（逗号分隔）"
    ja_JP: "特定の優先度のみトリガー：0=なし、1=緊急、2=高、3=通常、4=低（カンマ区切り）"

- name: state_filter
  label:
    en_US: State Filter
    zh_Hans: 状态过滤
    ja_JP: ステータスフィルター
  type: string
  required: false
  description:
    en_US: "Only trigger when issue state name matches (e.g., In Progress, Done, Backlog)"
    zh_Hans: "仅当 issue 状态名称匹配时触发（例如：进行中，完成，待办）"
    ja_JP: "課題のステータス名が一致する場合のみトリガー（例：進行中、完了、バックログ）"

- name: title_contains
  label:
    en_US: Title Contains
    zh_Hans: 标题包含
    ja_JP: タイトルに含む
  type: string
  required: false
  description:
    en_US: "Only trigger if title contains keywords (comma-separated). Leave empty to trigger for all updates."
    zh_Hans: "仅当标题包含关键词时触发（逗号分隔）。留空则触发所有更新。"
    ja_JP: "タイトルにキーワードが含まれる場合のみトリガー（カンマ区切り）。空の場合は全更新でトリガー。"

output_schema:
  type: object
  properties:
    action:
      type: string
      enum: [update]
    type:
      type: string
      enum: [Issue]
    data:
      type: object
      properties:
        id:
          type: string
        identifier:
          type: string
        number:
          type: number
        title:
          type: string
        description:
          type: string
        priority:
          type: number
        priorityLabel:
          type: string
        url:
          type: string
        state:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            type:
              type: string
        assignee:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
        assigneeId:
          type: string
        teamId:
          type: string
        projectId:
          type: string
        cycleId:
          type: string
        updatedAt:
          type: string
        completedAt:
          type: string
        canceledAt:
          type: string
        startedAt:
          type: string
    actor:
      type: object
  required:
  - action
  - type
  - data

extra:
  python:
    source: events/issue/issue_updated.py
